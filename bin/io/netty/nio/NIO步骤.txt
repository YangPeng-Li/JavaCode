--------------------------------------------Server--------------------------------------------------------------
步骤一：		打开ServerSocketChannel 用于监听客户端的连接，它是所有客户端连接的父管道
步骤二：		绑定监听端口，设置连接为非阻塞模式，
步骤三：		创建Reactor线程，创建多路复用并启动线程
步骤四：		将serverSocketChannerl注册到Reactor线程的多路复用器上Selector上，监听Accept事件
步骤五 ：		多路复用器在线程run方法的无限循环体内 轮询准备就绪的Key,
步骤六		多路复用器监听到所有新客户端接入，处理新客户端接入的请求完成TCP三次握手，建立物理链路
步骤六		多路复用器监听到所有新客户端接入，处理新客户端接入的请求完成TCP三次握手，建立物理链路
步骤七:		设置客户端的链路为非阻塞模式
步骤八 :		将新介入到的客户连接注册到Reador线程的多路复用器上，监听读操作，读取客户端发送的网络消息
步骤九：		 异步读取客户端请求消息到缓存区
步骤十：		 对ByteBuffer进行编码，如果半包消息指针reset,继续读取后续报文，将解码成功的消息封装成task，投递到业务线程池上，进行业务逻辑编排
步骤十一		将Pojo对象encode成ByteBuffer,调用SocketChannel的异步write接口将消息发送给客户端

----------------------------------------------Client-----------------------------------------------------------
步骤一		打开SocketChannel，绑定客户端本地地址
步骤二		设置SocketChannel为非阻塞模式，同时设置客户端连接的TCP参数，
步骤三		异步连接服务端
步骤四		判断是否连接成功，如果连接成功则直接注册读状态到多路复用器中，如果当前没有连接成功
			(异步连接，返回false ,说明客户端已经发送sync包，服务端没有返回ack包，物理链路没有建立)
步骤五:		向Reactor线程的多路复用器注册OP_CONNECT状态位，监听服务端的TCP ACK应答
步骤六：	创建Reactor线程，创建多路复用器并启动线程
步骤七： 	多路复用器在线程run 方法的无限循环体内轮询准备就绪的key
步骤八： 	接受connect时间处理
步骤九：	判断连接结果，如果连接成功，注册读事件到多路复用器
步骤十：	注册事件到多路复用器上
步骤十一：	异步读取客户端请求到缓存区
步骤十二：	对byteBuffer进行编码，如果有半包消息接收缓冲区Reset,继续读取后续的报文
			将解码成功的消息封装成Task,投递到线程池中进行业务逻辑编排
