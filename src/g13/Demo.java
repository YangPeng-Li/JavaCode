package g13;


/*
 * Reflection 视为动态语言的关键，能获取任何类的内部信息
 * 并直接操作任意对象的内部属性及方法
 * 
 * 功能：
 * 1.运行时判断任意一个对象所属的类
 * 2.运行时判断任意一个对象所属的类
 * 
 * 
 * 反射相关的API
 * lang.Class 代表一个类
 * lang.reflect.Method 代表类的方法
 * lang.reflect.Field 代表类的成员变量
 * lang.reflect.Contructor 代表类的构造方法
 */

/*
1.理解Class类并实例化Class类的对象
2.运行是创建类的对象并获取类的完整结构
3.通过反射类调用指定方法，属性
4.动态代理
*/
public class Demo {
	
}
