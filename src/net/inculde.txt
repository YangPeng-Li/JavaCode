1.网络编程概述
通讯要素
	IP 和端口号
	网络通信协议
InetAddress类

TCP 网络通信
UDP 网络通信 （传输层）
URL	编程

Java是Internet上语言
Java提供的网络类库，可以实现无痛的网络连接，联网的底层细节被隐藏在java的本机安装系统里
由jvm进行控制。并且Java实现了一个跨平台的网络库，程序员面对的是一个统一的网络编程环境。

网络编程基础：
	把分布在不同地理区域的计算机与专门的外部设备用通信线路互联成一个规模大、功能强的网络系统，从而使众多的计算机可以方便
	地互相传递信息、共享信息、软件、数据信息等资源

网络编程目的：
	直接或间接地通过网络协议与其他计算机进行通讯
网络编程中主两个主要问题
	1）如何准确地定位网络上一台或多台主机
	2）找到主机后如何可靠高效地进行数据传输
	
通信双发方的地址

一定的规则
	OSI参考模型
	TCP/IP（参考模型）
	
	
IP地址：InetAddress 
	唯一的表示Internet上的计算机	
	本地回环地址（hostAddress）:127.0.0.1 主机名（hostname）：localhost
端口号标识正在计算机上运行的进程（程序）
	不同的进程有不同的端口号
	被规定为16位的整数0~65535 其中0~1023被预先定义的服务通信
	占用除非我们需要访问这些特定服务，否则就应该使用
	1024~65535这些端口中的某一个进行通信，一面发生端口冲突

端口号与IP地址的组合得出一个网络套接字


通信协议
	计算机网络中实现通信必须有一些约定，即通信协议，对速率，传输代码，代码结构
	传输控制步骤，出错控制等制定标准
	
通信协议分层思想
	由于节点之间联系复杂，在制定协议时，把复杂成份分解成简单的成份
	
	
TCP/IP 
	传输控制协议（TCP）1.先建立数据通道 ，（三次握手，可靠） 客户端/服务端 2.可大数据量的传输3.传输完毕，释放连接，效率低
	用户数据协议（UDP）1.将数据源、目的封装成数据包，不需要建立连接2.么个数据包大小限制在64k内3.无需连接，不可靠4.传输完不断
	
Socket套接字 

	Scoket 利用套接字开发网络
	通信的两端都要有Socket,是两台机器键通信的端点
	网络通信其实就是Socket间的通信
	Socket允许把程序网络连接成一个流，数据在两个Socket间通过IO传输
	一般主动发起通信的应用程序属于客户端，等待通信请求的为服务端
	
UDP网络通信

	类DatagramSocket 和DatagramPacket 实现基于UDP协议网络程序
	
	UDP数据报通过数据报套接字DatagramSocket发送和接受
	系统不保证UDP数据一定能够安全送到目的地，也不能确定什么时候抵达
	
	DatagramPacket 对象封装了UDP数据报，在数据报中包含了发送端的IP地址和端口号以及接收端的IP
	地址和端口号。
	
	UDP协议中每个数据包都给出了完整的地址信息，因此无须建立发送方和接收方的连接
	
		//创建一个数据报，每个数据报不能大于64K,都记录着 数据信息，发送端的IP，端口号，以及要发送
		//的接收端的IP、端口号
		
网络编程概要
	通讯要素
		IP和端口号
		网络通信协议
InetAddress类
TCP网络通信
UDP网络通信
URL编程

URL编程
	URL（Uniform Resource Locator）统一资源定位符
URL的基本结构由5部分组成
	<传输协议>：//<主机名>：<端口号>/<文件名>
	eg:http://127.0.0.1:8080/hello/index.jsp